{"version":3,"sources":["img/king.png","serviceWorker.js","reducers/checkersReducer.js","reducers/navBar.js","reducers/checkerAI.js","reducers/index.js","history.js","components/Piece.js","components/Square.js","components/Row.js","components/CaputerdPiece.js","components/containers/Board.js","components/App.js","components/Tabs.js","components/containers/NavbarContainer.js","components/Sections.js","components/containers/AboutSections.js","components/AboutFunctions.js","components/containers/AiBoard.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","gameState","currentTurn","board","red","black","winner","pieceBeforeMove","row","column","oldColor","canContinue","showCapture","didCapture","redArr","blackArr","checkerReducer","x","state","arguments","length","undefined","action","newState","JSON","parse","stringify","type","color","i","j","checkHighlight","removeHighlight","createHighlight","moveToHighlight","startPieceMove","value","checkWinner","kingBo","canCapture1","canCapture2","capColor1","capColor2","ogRow","ogCol","kingCheckRow","kingCheckHighlight","moveMent","pieceOnLeft","pieceOnRight","pieceHighLight","pieceCaptureHighlight","pieceCheckHighlight","newRow","rowDir","colDir","findCaptureCol","NEWcapturePiece","show1","show2","checkContinue","orgColor","origRow","push","navBarReducer","console","log","redPieces","reddPieces","forEach","elm","canPieceMove","scanBoard","rootReducer","combineReducers","navBar","aiBoard","createBrowserHistory","Piece","_ref","rowI","method","react_default","a","createElement","className","onClick","Square","empty","Fragment","components_Piece","Row","rowName","index","map","square","int","key","components_Square","CaputerdPiece","piece","Board","localStorage","getItem","this","props","startGame","getNewGame","getLocalGame","clear","setItem","getAll","_this","components_Row","pieceMove","restartGame","components_CaputerdPiece","Component","connect","showCaputre","dispatch","pieceColor","pieceRow","columnNum","removeShowCapture","App","containers_Board","Tabs","tabs","currentActive","text","Link","to","route","NavbarContainer","components_Tabs","setActive","Sections","title","content","AboutSections","components_Sections","href","AiBoard","routing","routerMiddleware","history","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","es","Router","basename","process","containers_NavbarContainer","Switch","Route","path","exact","component","AboutContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52d4f630.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/king.3e54790a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function initialBoard() {\n  return [\n    [\"red\", null, \"red\", null, \"red\", null, \"red\", null],\n    [null, \"red\", null, \"red\", null, \"red\", null, \"red\"],\n    [\"red\", null, \"red\", null, \"red\", null, \"red\", null],\n    [null, \"empty\", null, \"empty\", null, \"empty\", null, \"empty\"],\n    [\"empty\", null, \"empty\", null, \"empty\", null, \"empty\", null],\n    [null, \"black\", null, \"black\", null, \"black\", null, \"black\"],\n    [\"black\", null, \"black\", null, \"black\", null, \"black\", null],\n    [null, \"black\", null, \"black\", null, \"black\", null, \"black\"]\n  ];\n}\n\nfunction testBoard(){\n  return [\n    [\"red\", null, \"red\", null, \"blackking\", null, \"empty\", null],\n    [null, \"red\", null, \"red\", null, \"red\", null, \"red\"],\n    [\"red\", null, \"empty\", null, \"empty\", null, \"red\", null],\n    [null, \"red\", null, \"red\", null, \"empty\", null, \"empty\"],\n    [\"empty\", null, \"empty\", null, \"empty\", null, \"empty\", null],\n    [null, \"red\", null, \"black\", null, \"black\", null, \"black\"],\n    [\"blackking\", null, \"black\", null, \"black\", null, \"black\", null],\n    [null, \"black\", null, \"black\", null, \"black\", null, \"black\"]\n  ];\n}\n\n// INITIAL STATE\n\nconst gameState = {\n  currentTurn: \"BLACK\",\n  board: initialBoard(),\n  // board: testBoard(),\n  red: 12,\n  black: 12,\n  winner: null,\n  pieceBeforeMove: { row: 0, column: 0, oldColor: \"black\" },\n  canContinue: false,\n  showCapture: false,\n  didCapture: false,\n  redArr: [],\n  blackArr: []\n};\nfunction deepCopy(x) {\n  return JSON.parse(JSON.stringify(x));\n}\n\nconst checkerReducer = (state = gameState, action) => {\n  let newState = deepCopy(state);\n\n  switch (action.type) {\n    case \"UPDATE\":\n      break;\n    case \"PIECE_MOVE\":\n    return startPieceMove(newState, action.row ,action.column, action.color)\n      // return movePiece(action.row, action.color, action.column, newState);\n    case 'GET_RUNNING_GAME':\n    return startRuningGame(newState, action.value)\n    case 'RESTART_GAME':\n    return gameState\n    default:\n      return state;\n  }\n};\nexport default checkerReducer;\n\nfunction startRuningGame(newState, runningGame){\n  newState = runningGame\n  return newState\n\n}\n\n// currentTurn: \"BLACK\",\n//   board: initialBoard(),\n//   // board: testBoard(),\n//   red: 12,\n//   black: 12,\n//   winner: null,\n//   pieceBeforeMove: { row: 0, column: 0, oldColor: \"black\" },\n//   canContinue: false,\n//   showCapture: false,\n//   didCapture: false,\n//   redArr: [],\n//   blackArr: []\n// CHECK WINNER\n\nfunction checkWinner(newState) {\n  if (newState.red === 0) {\n    newState.winner = \"Black Is the winner!!\";\n    // return newState;\n  } else if (newState.black === 0) {\n    newState.winner = \"Red Is the winner!!\";\n    // return newState;\n  } else {\n    // DO NOTHING\n  }\n}\n\n\n// CNECKS FOR MOVE PIECE\nfunction checkHighlight(state) {\n  for (let i = 0; i < state.length; i++) {\n    for (let j = 0; j < state[i].length; j++) {\n      if (state[i][j] === \"highlight\") return false;\n    }\n  }\n  return true;\n}\n\n\n\n\nfunction startPieceMove(newState, row ,column, color){\nif(checkHighlight(newState.board)){\n    if(newState.pieceBeforeMove.row === row  && newState.pieceBeforeMove.column === column ){\n      return removeHighlight(newState)\n    }\n  switch(color){\n    case 'red':\n\n  \n    if(newState.currentTurn === 'RED')\n    return createHighlight(newState, row, column, color, false)\n    else\n    return newState\n    case 'black': \n    if(newState.currentTurn === 'BLACK')\n    return createHighlight(newState, row, column, color, false)\n    else\n    return newState\n    case 'redking':\n    if(newState.currentTurn === 'RED')\n    return createHighlight(newState, row, column, color, true)\n    else\n    return newState\n    case 'blackking':\n    if(newState.currentTurn === 'BLACK')\n    return createHighlight(newState, row, column, color, true)\n    else\n    return newState\n    default:\n    return newState\n  }\n}else{\n  if(newState.pieceBeforeMove.row === row  && newState.pieceBeforeMove.column === column ){\n    newState.pieceBeforeMove.row = null\n    newState.pieceBeforeMove.column = null\n    return removeHighlight(newState)\n  }\n  switch(color){\n    case 'highlight':\n    \n    if(newState.currentTurn === 'BLACK'){\n  return moveToHighlight(newState, row, column, 'black')\n    }else{\n     return moveToHighlight(newState, row, column, 'red')\n    }\n    default:\n    return newState\n  }\n}\n}\nfunction removeHighlight(newState) {\n  for (let i = 0; i < newState.board.length; i++) {\n    for (let j = 0; j < newState.board[i].length; j++) {\n      if (newState.board[i][j] === \"highlight\") newState.board[i][j] = \"empty\";\n    }\n  }\n  return newState;\n}\n\n// UPDATE FUNCTIONS\nfunction createHighlight(newState, row, column, color, kingBo){\n// The parameters being passed into this function should be the newState, ther row of piece, column, of piece, color of piece, and if king\nnewState.pieceBeforeMove.row = row;\nnewState.pieceBeforeMove.column = column;\nnewState.pieceBeforeMove.oldColor = color;\nlet canCapture1;\nlet canCapture2;\n\nswitch(color){\n  case 'red':\n  canCapture1 = 'black'\n  canCapture2 = 'blackking'\n  break;\n  case 'redking':\n  canCapture1 = 'black'\n  canCapture2 = 'blackking'\n  break;\n  case 'black':\n  canCapture1 = 'red'\n  canCapture2 = 'redking'\n  break;\n  case 'blackking':\n  canCapture1 = 'red'\n  canCapture2 = 'redking'\n  break;\n  default:\n  break;\n}\n\n\nif(kingBo){\n  // MOVEMENT FOR KINGS\n  return kingCheckHighlight(newState, color, canCapture1, canCapture2)\n}else{\n\n// MOVEMENT FOR PAWNS\nlet piece = pieceCheckHighlight(newState, color, canCapture1, canCapture2)\n\nreturn piece\n}\n}\n\nfunction kingCheckHighlight(newState, color, capColor1, capColor2){\n  let ogRow= newState.pieceBeforeMove.row\n  let ogCol = newState.pieceBeforeMove.column\n  if(newState.board[ogRow+1]){\n    kingCheckRow(newState, color,ogRow+1, ogCol, capColor1, capColor2)\n  }\n\n  if(newState.board[ogRow-1]){\n    kingCheckRow(newState, color,ogRow-1, ogCol, capColor1, capColor2)\n  }\n\n  return newState\n}\n\n\nfunction kingCheckRow(newState, color,newRow, ogCol, capColor1, capColor2){\n  let rowDir = newRow - newState.pieceBeforeMove.row\n\n  if(newState.board[newRow][ogCol+1] === 'empty'){\n    pieceHighLight(newState, newRow, ogCol+1)\n\n  }else if(newState.board[newRow][ogCol+1] === capColor1 || newState.board[newRow][ogCol+1] === capColor2){\n    // ROW DIRECTION \n\n    pieceCaptureHighlight(newState, newRow, ogCol+1, rowDir, +1, capColor1, capColor2)\n  }\n\n  if(newState.board[newRow][ogCol-1] === 'empty'){\n    pieceHighLight(newState, newRow, ogCol-1)\n  }else if(newState.board[newRow][ogCol-1] === capColor1 || newState.board[newRow][ogCol-1] === capColor2){\n\n    pieceCaptureHighlight(newState, newRow, ogCol-1, rowDir, -1, capColor1, capColor2)\n  }\n\n\n}\n\n\nfunction pieceCheckHighlight(newState, color, capColor1, capColor2){\n\nlet moveColor = (color === 'black' || color ==='blackking')\nlet moveMent = 0\nmoveColor? moveMent = -1: moveMent= 1;\n// CHECKS IF NEW ROW EXIST\nif(newState.board[newState.pieceBeforeMove.row + moveMent]){\n  \n  let pieceOnLeft = newState.board[newState.pieceBeforeMove.row + moveMent][newState.pieceBeforeMove.column+1]\n  let pieceOnRight = newState.board[newState.pieceBeforeMove.row + moveMent][newState.pieceBeforeMove.column-1]\n  // CHECKS PIECES ON LEFT EXIST\n\n\n  if(pieceOnLeft){\n    // CHECKS IF EMPTY\n    if(pieceOnLeft === 'empty'){\n      pieceHighLight(newState, newState.pieceBeforeMove.row + moveMent, newState.pieceBeforeMove.column+1 )\n    }else{\n    // CHECKS IF PIECE CAN BE CAPTURED\n      pieceCaptureHighlight(newState, newState.pieceBeforeMove.row + moveMent, newState.pieceBeforeMove.column+1 , moveMent, 1, capColor1, capColor2)\n\n    }\n  }else{\n    // DO NOTHING\n  }\n  // THEN AFTER CHECKING THE LEFT IT CHECKS THE RIGHT\n  // CHECKS PIECE ON RIGHT EXIST\n  if(pieceOnRight){\n\n    // CHECKS IF EMPTY\n\n    if(pieceOnRight === 'empty'){\n      pieceHighLight(newState, newState.pieceBeforeMove.row + moveMent, newState.pieceBeforeMove.column-1);\n    }else{\n\n      // CHECKS IF PIECE CAN BE CAPTURED\n      pieceCaptureHighlight(newState, newState.pieceBeforeMove.row + moveMent, newState.pieceBeforeMove.column-1 , moveMent, -1, capColor1, capColor2)\n    }\n  }\n}else{\n\n  // DO NOTHING\n}\n\nreturn newState\n}\nfunction pieceHighLight(newState, row, column){\n  newState.board[row][column] = 'highlight'\n}\n\nfunction pieceCaptureHighlight(newState, row, column, rowDir, colDir, capColor1, capColor2){\n  // ROW AND COLUMN ARE THE COOR FOR PIECE TO BE CAPTURED\n  // COLRIR AND ROW DIR TO DETERMINE WHERE PIECE CAN GO IF CAPTURE\n\n  if(newState.board[row][column] === capColor1 || newState.board[row][column] === capColor2){\n\n    if(newState.board[row+rowDir]){\n    if(newState.board[row+rowDir][column+colDir] === 'empty'){\n      newState.board[row+rowDir][column+colDir] = 'highlight'\n      newState.canContinue = true\n    }else{\n    }\n  }else{\n  }\n}\n}\n\n\n\nfunction moveToHighlight(newState, row, column, color){\n  newState.board[newState.pieceBeforeMove.row][newState.pieceBeforeMove.column] = 'empty'\n\n\n  NEWcapturePiece(newState, row, column, color)\n  if(row === 0 && color === 'black')\n  newState.board[row][column] = color + \"king\";\n  else if(row === 7 && color === \"red\")\n  newState.board[row][column] = color + \"king\";\n  else\n  newState.board[row][column] = newState.pieceBeforeMove.oldColor\n\n  removeHighlight(newState)\n  \nif(newState.didCapture){\n  let capColor1;\n    let capColor2;\n\n    switch(color){\n      case 'red':\n      capColor1 = 'black'\n      capColor2 = 'blackking'\n      break;\n      case 'redking':\n      capColor1 = 'black'\n      capColor2 = 'blackking'\n      break;\n      case 'black':\n      capColor1 = 'red'\n      capColor2 = 'redking'\n      break;\n      case 'blackking':\n      capColor1 = 'red'\n      capColor2 = 'redking'\n      break;\n      default:\n      break;\n    }\n    checkContinue(newState, color, capColor1, capColor2, row, column)\n\n}\n  if(newState.canContinue){\n\n\n    newState.pieceBeforeMove.row = row\n    newState.pieceBeforeMove.column = column\n\n\n  }else{\n\n    newState.didCapture = false\n    newState.currentTurn = color === 'black'? 'RED' : 'BLACK';\n  }\n\nreturn newState\n}\n\n\n\nfunction checkContinue(newState, color, capColor1, capColor2, ogRow, ogCol){\n  let show1;\n    let show2;\n\n  let moveColor = (color === 'black' || color ==='blackking')\n  let moveMent = 0\n  moveColor? moveMent = -1: moveMent= 1;\n\n  if(newState.board[ogRow + moveMent]){\n    \n  let pieceOnLeft = newState.board[ogRow + moveMent][ogCol+1]\n  let pieceOnRight = newState.board[ogRow + moveMent][ogCol-1]\n\n  // newState.board[row+rowDir][column+colDir] === 'empty'    \n  // pieceCaptureHighlight(newState, row, column, rowDir, colDir, capColor1, capColor2)\n\n    if(newState.board[ogRow + moveMent+moveMent]){\n        if((pieceOnLeft === capColor1 || pieceOnLeft === capColor2) && newState.board[ogRow + moveMent+moveMent][ogCol+1+1] === 'empty'){\n          pieceCaptureHighlight(newState, ogRow + moveMent, ogCol+1 , moveMent, 1, capColor1, capColor2)\n        }else{\n          show1 = true\n        }\n      if((pieceOnRight === capColor1 || pieceOnRight === capColor2) && newState.board[ogRow + moveMent+moveMent][ogCol-1-1] === 'empty'){\n        pieceCaptureHighlight(newState, ogRow + moveMent, ogCol-1 , moveMent, -1, capColor1, capColor2)\n      }else{\n        show2 = true\n      }\n\n      if(show1 && show2){\n        newState.canContinue = false\n      }\n      \n    }else{\n      newState.canContinue = false\n    }\n  }else{\n    newState.canContinue = false\n  }\n\n}\n\n\n// FUNCTION TO CAPTURE A PIECE\nfunction NEWcapturePiece(newState, row, column, color){\n  \n  if(newState.pieceBeforeMove.row - row === 2){\n    findCaptureCol(newState, row+1, column, color ,row)\n    // ROW TO BE CAPTURED WILL BE ROW-1\n  }else if(newState.pieceBeforeMove.row - row === -2){\n    findCaptureCol(newState, row-1, column, row)\n    // ROW TO BE CAPTURED WIL BE ROW+1\n  }else{\n    newState.canContinue =  false\n  }\n}\n\nfunction findCaptureCol(newState, row, column, orgColor, origRow){\n\n\n  let color\n  if(newState.pieceBeforeMove.column - column === 2){\n    color = newState.board[row][column+1]\n    if(color === 'red' || color ==='redking'){\n      newState.red -=1\n      newState.redArr.push({color:'red'})\n    }else if(color === 'black' || color ==='blackking'){\n      newState.black -=1\n      newState.blackArr.push({color:'black'})\n    }\n    newState.didCapture = true\n    checkWinner(newState)\n    newState.board[row][column+1] = 'empty'\n    // pieceCheckHighlight(newState, orgColor, capColor1, capColor2)\n\n  }else if(newState.pieceBeforeMove.column - column === -2){\n    // newState.pieceBeforeMove.column + 1\n    color = newState.board[row][column-1]\n    if(color === 'red' || color ==='redking'){\n      newState.red -=1\n      newState.redArr.push({color:'red'})\n    }else if(color === 'black' || color ==='blackking'){\n      newState.black -=1\n      newState.blackArr.push({color:'black'})\n    }\n    newState.didCapture = true\n    newState.board[row][column-1] = 'empty'\n    checkWinner(newState)\n  }else{\n    newState.canContinue = false;\n  }\n}\n\n\n\n","\n  function deepCopy(x) {\n    return JSON.parse(JSON.stringify(x));\n  }\n  \n  let initial = 'Checkers H vs H'\n\n  const navBarReducer = (state = initial, action) =>{\n      let newState= deepCopy(state)\n    switch(action.type){\n     case 'CHANGE_TAB':\n        newState= action.value\n        return newState\n        default:\n        return state\n    }\n  }\n\n  export default navBarReducer","\n\n\n\nfunction initialBoard() {\n    return [\n      [\"red\", null, \"red\", null, \"red\", null, \"red\", null],\n      [null, \"red\", null, \"red\", null, \"red\", null, \"red\"],\n      [\"red\", null, \"red\", null, \"red\", null, \"red\", null],\n      [null, \"empty\", null, \"empty\", null, \"empty\", null, \"empty\"],\n      [\"empty\", null, \"empty\", null, \"empty\", null, \"empty\", null],\n      [null, \"black\", null, \"black\", null, \"black\", null, \"black\"],\n      [\"black\", null, \"black\", null, \"black\", null, \"black\", null],\n      [null, \"black\", null, \"black\", null, \"black\", null, \"black\"]\n    ];\n  }\nconsole.log(\n    `\n    1: 1-0-3-0-5-0-7-0\n    2: 0-2-0-4-0-6-0-8\n    3: 1-0-3-0-5-0-7-0\n    4: 0-2-0-4-0-6-0-8\n    5: 1-0-3-0-5-0-7-0\n    6: 0-2-0-4-0-6-0-8\n    7: 1-0-3-0-5-0-7-0\n    8: 0-2-0-4-0-6-0-8    \n    `\n)\n\n  const gameState = {\n    currentTurn: \"BLACK\",\n    board: initialBoard(),\n    // board: testBoard(),\n    red: 12,\n    black: 12,\n    winner: null,\n    pieceBeforeMove: { row: 0, column: 0, oldColor: \"black\" },\n    canContinue: false,\n    showCapture: false,\n    didCapture: false,\n    redArr: [],\n    blackArr: []\n  };\n  function deepCopy(x) {\n    return JSON.parse(JSON.stringify(x));\n  }\n\n  \n  const checkerReducer = (state = gameState, action) => {\n    let newState = deepCopy(state);\n    switch(action.type){\n\n\n\n        default: \n        return newState\n    }\n  }\n\nexport default checkerReducer\n\n// THIS WILL BE THE CHECKERS AI FOR RED PLAYER\nscanBoard(gameState)\nfunction scanBoard(newState){\n\n    // FUNCTION TO CHECK WHICH PIECE IS VALID TO MOVE\n    let redPieces =[]\n    for(let i = 0; i < newState.board.length; i++){\n        for(let j =0; j <newState.board[i].length; j++){\n            if(newState.board[i][j] === 'red'){\n                redPieces.push({row: i, column: j})\n            }\n        }\n\n    }\n    console.log(redPieces)\n    canPieceMove(newState, redPieces)\n}\nfunction canPieceMove(newState, reddPieces){\n    let possibleMoves = []\n    reddPieces.forEach(elm=>{\n        if(newState.board[elm.row+1]){\n\n        }\n\n    })\n}\n\nfunction checkNextColumn(newState, row, column){\n    if(newState.board[row][column+1] === 'empty'){\n        newState.board[row][column+1] = 'highlight'\n    }\n    if(newState.board[row][column-1] === 'empty'){\n        newState.board[row][column-1] = 'highlight'\n    }\n}","// import { routerReducer } from \"react-router-redux\";\nimport { combineReducers } from \"redux\";\n\n// Reducers This is where the reducers will go\nimport checkerReducer from './checkersReducer'\nimport navBar from './navBar'\nimport aiBoard from './checkerAI'\nconst rootReducer = combineReducers({\n    board: checkerReducer,\n    navBar: navBar,\n    aiBoard: aiBoard\n\n});\n\nexport default rootReducer","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import \"../styles/piece.css\";\n\nimport React from 'react'\nimport img from '../img/king.png'\nconst Piece = ({color, rowI, column, method}) => {\n  return (\n    <div className={'piece-'+color}\n        onClick={method? ()=>{method(color, rowI, column)}: null}\n      >\n\n\n\n      </div>\n  )\n}\n// {rowI? `${rowI}-${column}`: `0-0`}\nexport default Piece\n\n\n","import React from \"react\";\nimport '.././styles/square.css'\nimport Piece from \"./Piece\";\n\nconst Square = ({ empty, color, rowI, column, method}) => {\n\n\n  return (\n      <React.Fragment>\n        {empty? \n          <div className='square-empty'>\n            <Piece color={'blank'}\n              method={null}\n              \n            />\n            </div>\n        : \n        <div className='square-ready'>\n            <Piece method={method}color={color} rowI={rowI} column={column}/>\n\n          </div>}\n\n      </React.Fragment>\n\n\n    \n  );\n};\n\n\nexport default Square;\n","import React from 'react'\nimport Square from './Square';\nimport '.././styles/row.css'\n\nconst Row = ({rowName, index, method}) => {\n\n  return (\n    <React.Fragment>\n        <div className='row'>\n        {rowName.map((square, int)=>{\n          return(\n            <React.Fragment key={int}>\n              {square ? <Square method={method} rowI={index} column={int}empty={false} color={square}/>: <Square  empty={true}/>}\n              </React.Fragment>\n        )})}\n        </div>\n    </React.Fragment>\n\n  )\n}\n\nexport default Row\n","import React from 'react'\n\nimport '../styles/deathRow.css'\n\n\nconst CaputerdPiece = ({red, black}) => {\n\n  return (\n      <div className='death-row'>\n    <div className='death-row-red'>\n        {red?red.map((piece, index)=>(\n            <div className={'death-'+ piece.color} key={index}/>\n        )): null}\n        </div>\n        <div className='death-row-black'>\n        {black?black.map((piece, index)=>(\n            <div className={'death-'+ piece.color} key={index}/>\n        )): null}\n    </div>\n    </div>\n  )\n}\n\nexport default CaputerdPiece\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Row from \"../Row\";\nimport \"../../styles/board.css\";\nimport CaputerdPiece from \"../CaputerdPiece\";\n\nclass Board extends Component {\n  getLocalGame() {\n    let gameState = JSON.parse(localStorage.getItem('gamestate'))\n    if(gameState){\n    this.props.startGame(gameState)\n    }else{\n      this.props.getNewGame()\n    }\n  }\n  componentDidMount(){\n    this.getLocalGame()\n  }\n  restartGame(){\n    localStorage.clear()\n    this.props.getNewGame()\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"gamestate\", JSON.stringify(this.props.getAll));\n    // localStorage.setItem('gamestate', JSON.parse())\n  }\n\n  // removeImage(){\n  // }\n  render() {\n    return (\n      <div className=\"checkers-body\">\n        {this.props.winner ? (\n          <h1>{this.props.winner}</h1>\n        ) : (\n          <h1>It is {this.props.currentTurn} Turn</h1>\n        )}\n        <div className=\"boardContainer\">\n          {this.props.board.map((row, index) => (\n            <Row\n              rowName={row}\n              index={index}\n              method={this.props.pieceMove}\n              key={index}\n            />\n          ))}\n        </div>\n        <button onClick={() => this.restartGame()} >Restart the Game</button>\n        <CaputerdPiece red={this.props.redArr} black={this.props.blackArr} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentTurn: state.board.currentTurn,\n  redArr: state.board.redArr,\n  blackArr: state.board.blackArr,\n  board: state.board.board,\n  showCaputre: state.board.showCapture,\n  winner: state.board.winner,\n  getAll: state.board\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkWinner: () => dispatch({ type: \"WINNER_CHECK\" }),\n  pieceMove: (pieceColor, pieceRow, columnNum) =>\n    dispatch({\n      type: \"PIECE_MOVE\",\n      color: pieceColor,\n      row: pieceRow,\n      column: columnNum\n    }),\n  removeShowCapture: () => dispatch({ type: \"REMOVE_SHOW\" }),\n  startGame: (gameState) => dispatch({ type: \"GET_RUNNING_GAME\", value: gameState }),\n  getNewGame: () => dispatch({type:'RESTART_GAME'})\n});\n\n// const gameState = {\n//   currentTurn: \"BLACK\",\n//   board: initialBoard(),\n//   // board: testBoard(),\n//   red: 12,\n//   black: 12,\n//   winner: null,\n//   pieceBeforeMove: { row: 0, column: 0, oldColor: \"black\" },\n//   canContinue: false,\n//   showCapture: false,\n//   didCapture: false,\n//   redArr: [],\n//   blackArr: []\n// };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board);\n","import React, { Component } from 'react';\nimport Board from './containers/Board';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Board/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nconst Tabs = ({method, tabs, currentActive}) => {\n\n  return (\n    <React.Fragment>\n    <li onClick={()=>{\n\n\n        method(tabs.text)}}\n    className={currentActive === tabs.text? 'is-active': ''}>\n\n    <Link to={tabs.route}>\n    {tabs.text}\n    </Link>\n\n\n    </li>\n\n\n    </React.Fragment>\n  )\n}\n\nexport default Tabs\n","\n\nimport \"../../styles/nav.css\";\n\nimport { connect } from \"react-redux\";\n\nimport React, { Component } from 'react'\nimport Tabs from \"../Tabs\";\n\nclass NavbarContainer extends Component {\n\n\n\n  render() {\n\n    return (\n      <React.Fragment>\n      <div className='navBar'>\n        <h1>Welcome to my Checkers game!</h1>\n      </div>\n\n      <div className=\"tabs is-centered is-boxed\">\n        <ul className='tabs-list'>\n\n          {this.props.tabs.map((tabs, index) =>(\n            <Tabs method={this.props.setActive} key={index} tabs={tabs} currentActive={this.props.currentActive}/>\n          ))}\n\n          {/* <li className='is-active'>\n            <a>Pictures</a>\n          </li>\n          <li className=''>\n            <a>Pictures</a>\n          </li> */}\n        </ul>\n      </div>\n\n    </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  currentActive : state.navBar\n  \n});\n\nconst mapDispatchToProps = dispatch => ({\n  setActive :(tabs) =>dispatch({type:'CHANGE_TAB' ,value: tabs})\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavbarContainer);","import React from 'react'\n\nconst Sections = ({title, content}) => {\n  return (\n    <div className='section-par'>\n      <h1>{title}</h1>\n      <p>{content}</p>\n    </div>\n  )\n}\n\nexport default Sections\n","import React, { Component } from \"react\";\nimport Sections from \"../Sections\";\nimport '../../styles/about.css'\nimport {aboutCheckersPar, aboutMe} from '../AboutFunctions'\nclass AboutSections extends Component {\n  render() {\n    return (\n      <div className=\"sections-body\">\n        <div className=\"section\">\n          <Sections title={'About CheckersJS'} content={aboutCheckersPar()}/>\n            <div className='section-par'>\n                <h1>About me!</h1>\n            <p>Hi! My name is KimJ and I am the developer behind this checkers game. This checkers game is built with React and Redux. This \n    project is aime to help me build my skills with React and Redux. I hopefully made it as modular as I can so that I may easily add to the checkers\n    game and add other games! Check out the repository at <a href='https://github.com/KimjManansala/checkers'>Github</a> and check me out\n    at <a href='https://www.linkedin.com/in/kim-jasper-manansala/'>Linkedin </a> </p>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutSections;\n","\n\nexport const aboutCheckersPar = () =>(\n    `This is CheckersJS. A checkers game created for a React-Redux project. In this application I use the Library React to \n    To create components that renders the checkers games. The current position of all piece are stored in my Redux store. This project tested\n    my skills with the logic of checkers and using the React library.\n     `\n)\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Row from \"../Row\";\nimport '../../styles/board.css'\nimport '../../styles/AiBoard.css'\nimport CaputerdPiece from \"../CaputerdPiece\";\n\nclass AiBoard extends Component {\n\n\n    getBoard(){\n        \n    }\n\n    // removeImage(){\n    // }\n  render() {\n\n\n    return (\n        <div className='checkers-body'>\n\n\n        \n        {this.props.winner? <h1>{this.props.winner}</h1>: <h1>HI, CHECKERS VS COMPUTER IS STILL UNDER DEVELOPMENT. COME BACK LATER :)</h1>}\n        <div className=\"boardContainer\">\n          {this.props.board.map((row, index)=>(\n            <Row rowName={row} index={index} method={this.props.pieceMove} key={index}/>\n          ))}\n        </div>\n          \n          <CaputerdPiece red={this.props.redArr} black={this.props.blackArr}/>\n\n        </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentTurn: state.aiBoard.currentTurn,\n  redArr : state.aiBoard.redArr,\n  blackArr: state.aiBoard.blackArr,\n  board: state.aiBoard.board,\n  showCaputre: state.aiBoard.showCapture,\n  winner: state.aiBoard.winner\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkWinner: () => dispatch({type:'WINNER_CHECK'}),\n  pieceMove: (pieceColor, pieceRow, columnNum) =>\n    dispatch({ type: \"PIECE_MOVE\", color: pieceColor, row: pieceRow, column: columnNum }),\n  removeShowCapture: () => dispatch({type:'REMOVE_SHOW'})\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AiBoard);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n// Redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\n// Root reducer\nimport rootReducer from \"./reducers/index\";\n\n// React Router\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./history\"; // Import history in any component you want to use it\nimport { routerMiddleware } from \"react-router-redux\";\n\n// Components\nimport App from \"./components/App\";\nimport Navbar from \"./components/containers/NavbarContainer\";\n\nimport AboutContainer from './components/containers/AboutSections'\nimport AiBoard from \"./components/containers/AiBoard\";\n// Router middleware\nconst routing = routerMiddleware(history);\n\n// Initialize redux store and thunk middleware\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(routing))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history} basename={process.env.PUBLIC_URL}>\n      <div>\n        <Navbar\n          title={\"Welcome to my Checkers game!\"}\n          tabs={[\n            { text: \"Checkers H vs H\", route: \"/\" },\n            {text: 'Checker H vs C', route:\"/checkers/bot\"},\n            { text: \"About\", route: \"/about\" }\n          ]}\n        />\n        <Switch>\n          <Route path=\"/\" exact component={App} />\n          <Route path=\"/checkers/bot\" exact component={AiBoard}/>\n          <Route path=\"/about\" exact component={AboutContainer} />\n        </Switch>\n\n      </div>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}